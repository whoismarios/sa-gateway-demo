static_resources:
  listeners:
    - name: listener_rest
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/api/" }
                          route: { cluster: rest_service }
                        - match: { prefix: "/graphql" }
                          route: { cluster: graphql_service }
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

    - name: listener_grpc
      address:
        socket_address: { address: 0.0.0.0, port_value: 9090 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: ingress_tcp
                cluster: grpc_service

  clusters:
    - name: rest_service
      connect_timeout: 0.5s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: rest_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: rest-service, port_value: 3000 }

    - name: graphql_service
      connect_timeout: 0.5s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: graphql_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: graphql-service, port_value: 4000 }

    - name: grpc_service
      connect_timeout: 0.5s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: grpc_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: grpc-service, port_value: 50051 }

admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
